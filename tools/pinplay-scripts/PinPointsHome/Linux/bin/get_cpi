#!/bin/bash
#
# Get the CPI values from the CMP$im results generated by the MPI runpin
# script.
#
# $Id: get_cpi,v 1.3 2008/10/29 19:16:16 tmstall Exp tmstall $

function usage {
    USAGE0="Usage: $0 [data_file] [-s]"
    USAGE1="   data_file  Data file with output from running runpin script"
    USAGE2="              Defaults to file 'pinLIT_out.txt'"
    USAGE3="   -s         Print out only the ratios"

    echo "$USAGE0" 1>&2
    echo "$USAGE1" 1>&2
    echo "$USAGE2" 1>&2
    echo "$USAGE3" 1>&2
    exit 1
}

# Cmd line option defaults
#
export OUT_FILE="pinLIT_out.txt"
export ALL=1		# Default is to print it all

# Get optional file name as first command line argument
#
if [[ ! -z $1 ]]
then
   if [[ -f $1 ]]
   then
       OUT_FILE=$1
       shift
   else
       echo "ERROR: Must have file name as first option"
       usage
   fi
fi

# Parse command line options
#
while getopts "sf:?h" c
do
    case $c in
    s)
    	ALL=0
	;;
    h | \?)
        usage
        ;;
    esac
done

[[ ! -f $OUT_FILE ]] && echo "ERROR: Can't open file $OUT_FILE" && exit 1

if [[ $ALL == 1 ]] 
then
    # Print out all the stats
    #
    gawk -F , ' 
	BEGIN { printf "name                          whole predict ratio p/w\n" 
	        printf "--------------------          ----- ------- ---------\n"
	} 
	/,cpi,/ { name=$1; whole=$3; predict=$4;
	    printf "%s %5.2f %5.2f %6.4f\n", name, whole, predict, predict/whole;
	}
	' $OUT_FILE
else

    # Print out only the ratios
    #
    gawk -F , ' 
	/,cpi,/ { name=$1; whole=$3; predict=$4;
	    printf "%6.4f\n", predict/whole;
	}
	' $OUT_FILE
fi
exit 0
